{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Board.svelte",
    "../../Congrats.svelte",
    "../../Controls.svelte",
    "../../ControlsButton.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Board from './Board.svelte';\n\timport Congrats from './Congrats.svelte';\n\timport Controls from './Controls.svelte';\n\timport {\n\t\t generateTiles, getIsComlete, move, shuffleBoard\n\t} from './helpers.js';\n\n\texport let tiles = shuffleBoard(generateTiles(4, 4));\n\n\texport let updateState = (action, ...params) => {\n\t\tswitch (action) {\n\t\t\tcase 'move': {\n\t\t\t\tconst [tile] = params;\n\t\t\t\ttiles = move(tiles, tile);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'updateSize' : {\n\t\t\t\tconst [rows, cols] = params;\n\t\t\t\ttiles = shuffleBoard(generateTiles(rows, cols));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t$: isComplete = getIsComlete(tiles);\n</script>\n\n<div id=\"root\">\n\t<main>\n\t\t{#if isComplete}\n\t\t\t<Congrats {tiles} {updateState} />\n\t\t{:else}\n\t\t\t<Controls {tiles} {updateState} />\n\t\t\t<Board {tiles} {updateState} />\n\t\t{/if}\n\t</main>\n</div>\n\n<style>\n\t/* PALLETE\n\t\tdark-primary-color:     #303F9F;\n\t\tdefault-primary-color:  #3F51B5;\n\t\tlight-primary-color:    #C5CAE9;\n\t\taccent-color:           #44b39b;\n\t\tdivider-color:          #B6B6B6\n\t*/\n\n\t#root {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\toverflow: hidden;\n\t}\n\n\tmain {\n\t\theight: 100vh;\n\t}\n</style>",
    "<script>\n  export let tiles;\n  export let updateState;\n\n  const getSortedTiles = (tiles) => {\n    const sortedTiles = [];\n\n    tiles.forEach((rowTiles, y) => {\n      rowTiles.forEach((number, x) => {\n        sortedTiles[number] = [y, x];\n      });\n    });\n\n    return sortedTiles;\n  }\n\n  $: cols = tiles[0].length;\n  $: rows = tiles.length;\n  $: sortedTiles = getSortedTiles(tiles);\n</script>\n\n<div class='board-wrapper'>\n  <svg\n    class=\"board\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox={`0 0 ${cols * 24} ${rows * 24}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    {#each sortedTiles as pos, tileName}\n      {#if tileName !== 0}\n        <g\n          class=\"tile\"\n          on:click={() => { updateState('move', tileName); }}\n          key={tileName} \n          transform={`translate(${pos[1] * 24 + 1}, ${pos[0] * 24 + 1})`}\n        >\n          <rect\n            height=\"22\"\n            width=\"22\"\n            stroke-width=\"0\"\n            x=\"1\"\n            y=\"1\"\n          />\n          <text\n            x={12}\n            y={12}\n            alignment-baseline=\"central\"\n            text-anchor=\"middle\"\n          >\n            {tileName}\n          </text>\n        </g>\n      {/if}\n    {/each}\n  </svg>\n</div>\n\n<style>\n  .board-wrapper {\n    height: 100%;\n    width: 100%;\n    padding: 8rem 4rem 4rem;\n  }\n\n  .board .tile rect {\n    fill: #3F51B5;\n  }\n\n  .board .tile text {\n    fill: #cfd5f7;\n    font-size: .75rem;\n  }\n\n  .board .tile, .board {\n    transition: all .2s cubic-bezier(1, 0, 0, 1)\n  }\n\n  .board .tile:hover {\n    cursor: pointer;\n  }\n\n  .board .tile:hover rect {\n    fill: #475bca;\n  }\n\n  @media all and (max-width: 768px) {\n    .board-wrapper {\n      padding: 4rem 2rem 2rem;\n    }\n  }\n</style>",
    "<script>\n  import { onMount } from 'svelte';\n\n  export let tiles;\n  export let updateState;\n  \n  let audio;\n  \n  onMount(() => {\n\t\taudio.play();\n  });\n  \n  $: cols = tiles[0].length;\n  $: rows = tiles.length;\n</script>\n\n<div class=\"congrats\">\n  <div class=\"congrats-star\" />\n  <div class=\"congrats-header\">\n    You did it!\n  </div>\n  <audio src=\"build/win.ogg\" bind:this={audio} />\n  <div class=\"congrats-controls\">\n    <a\n      href=\"# \"\n      alt=\"Play again!\"\n      on:click={() => updateState('updateSize', rows, cols)}\n    >\n      Play again!\n    </a>\n  </div>\n</div>\n\n<style>\n  .congrats {\n    overflow: hidden;\n    text-align: center;\n  }\n\n  .congrats-star {\n    background: url('star.svg') no-repeat center center;\n    background-size: contain;\n    height: 60vh;\n    width: 60vw;\n    margin: 0 auto;\n  }\n\n  .congrats-header {\n    font-size: 5vw;    \n    margin-top: 3vh;\n    text-align: center;\n  }\n\n  .congrats-controls {\n    margin-top: 3vh;\n  }\n\n  .congrats a {\n    color: white;\n    font-size: 2vw; \n  }\n</style>",
    "<script>\n  import ControlsButton from './ControlsButton.svelte';\n  import { find } from './helpers';\n  \n  export let tiles;\n  export let updateState;\n\n  $: cols = tiles[0].length;\n  $: rows = tiles.length;\n\n  const handleKeyDown = ({ keyCode }) => {\n    const [row, col] = find(tiles, 0);\n    let tile;\n\n    if (keyCode === 37 && (col < cols - 1)) { // LEFT\n      tile = tiles[row][col + 1];\n    } else if (keyCode === 38 && (row < rows - 1)) { // UP\n      tile = tiles[row + 1][col];\n    } else if (keyCode === 39 && col > 0) { // RIGHT\n      tile = tiles[row][col - 1];\n    } else if (keyCode === 40 && row > 0) { // DOWN\n      tile = tiles[row - 1][col];\n    }\n\n    if (tile) updateState('move', tile);\n  };\n</script>\n\n<svelte:window on:keydown={handleKeyDown}/>\n\n<div class=\"controls\">\n  <div class=\"rows-controls\">\n    Rows\n    <ControlsButton {cols} {rows} update={[ 'rows', -1 ]} {updateState} />\n    <ControlsButton {cols} {rows} update={[ 'rows', +1 ]} {updateState} />\n  </div>\n  <div class=\"cols-controls\">\n    Columns\n    <ControlsButton {cols} {rows} update={[ 'cols', -1 ]} {updateState} />\n    <ControlsButton {cols} {rows} update={[ 'cols', +1 ]} {updateState} />\n  </div>\n  <div class=\"aside-controls\">\n    <ControlsButton {cols} {rows} shuffle {updateState} />\n  </div>\n</div>\n\n<style>\n  .controls {\n    display: flex;\n    padding-top: 1rem;\n    position: absolute;\n    top: 0;\n    opacity: .7;\n    width: 100%;\n    font-size: 1.125rem;\n  }\n\n  .controls > div {\n    padding: 0 1rem;\n  }\n\n  .controls .rows-controls {\n    flex: 1 0 auto;\n    text-align: right;\n    padding-left: 4rem;\n  }\n\n  .controls .cols-controls {\n    flex: 1 0 auto;\n  }\n\n  .controls .aside-controls {\n    flex: 0 1 auto;\n  }\n\n\n  @media all and (max-width: 768px) {\n    .controls {\n      font-size: 1rem;\n    }\n\n    .controls > div {\n      padding: 0 .25rem;\n    }\n\n    .controls > div:first-child {\n      padding-left: 1rem;\n    }\n\n    .controls > div:last-child {\n      padding-right: 1rem;\n    }\n  }\n</style>",
    "<script>\n\texport let direction = 0;\n\texport let update = [];\n\texport let rows;\n\texport let cols;\n\texport let shuffle = false;\n\texport let updateState;\n\n\t$: updateRows = update[0] === 'rows';\n\t$: updateCols = update[0] === 'cols';\n\t$: direction = update[1];\n</script>\n\n<button\n\tclass=\"btn outline\"\n\tclass:shuffle\n\tclass:outline={!shuffle}\n\ttitle={`${direction > 0 ? 'More' : 'Less'} ${updateRows ? 'rows' : 'columns'}`}\n\ton:click={() => {\n\t\tconst nextRows = shuffle ? rows : Math.max(2, rows + (updateRows ? direction : 0));\n\t\tconst nextCols = shuffle ? cols : Math.max(2, cols + (updateCols ? direction : 0));\n\t\tupdateState('updateSize', nextRows, nextCols);\n\t}}\n>\n\t{#if !shuffle}\n\t\t{direction > 0 ? '+' : '-'}\n\t{/if}\n</button>\n\n<style>\n  .btn {\n    border: 0;\n    border-radius: 50%;\n    cursor: pointer;\n    display: inline-block;\n    overflow: hidden;\n    outline: 0;\n    padding: 0;\n    text-align: center;\n    font-size: 1.125rem;\n    margin-left: 1rem;\n    height: 3rem;\n    line-height: 3rem;\n    width: 3rem;\n  }\n\n  .btn:hover {\n    box-shadow: 0 5px 11px 0 rgba(0, 0, 0, 0.2), 0 4px 15px 0 rgba(0, 0, 0, 0.15);\n  }\n\n  .btn.outline {\n    background: rgba(255,255,255,.1);\n    border: 1px solid #fff;\n    color: #fff;\n  }\n\n  .btn.outline:hover {\n    background: rgba(255,255,255,.2);\n  }\n\n  .btn.shuffle {\n    background: #1db796 url('shuffle.svg') no-repeat center center;\n    background-size: 80%;\n    color: #FFF;\n    transition: .3s;\n  }\n\n  .btn.shuffle:hover {\n    background-color: #4ddebf;\n  }\n\n  @media all and (max-width: 768px) {\n    .btn {\n      height: 1.5rem;\n      line-height: 1.5rem;\n      width: 1.5rem;\n      margin-left: .5rem;\n      font-size: 1rem;\n    }\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}