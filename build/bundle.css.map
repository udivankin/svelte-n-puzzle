{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Board.svelte",
    "../../Congrats.svelte",
    "../../Controls.svelte",
    "../../ControlsButton.svelte",
    "../../Stats.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { setContext } from 'svelte';\n  import Board from \"./Board.svelte\";\n  import Congrats from \"./Congrats.svelte\";\n  import Controls from \"./Controls.svelte\";\n  import {\n    generateTiles,\n    getIsComlete,\n    move,\n    shuffleBoard\n  } from \"./helpers.js\";\n  import Stats from \"./Stats.svelte\";\n\n  let moveId = 0;\n  let gameId = Symbol('gameId');\n\n  export let tiles = shuffleBoard(generateTiles(4, 4));\n  export let updateState = (action, ...params) => {\n    switch (action) {\n      case \"move\": {\n        const [tile] = params;\n        let count = 0;\n        [tiles, count] = move(tiles, tile);\n        moveId += count;\n        break;\n      }\n      case \"updateSize\": {\n        const [rows, cols] = params;\n        tiles = shuffleBoard(generateTiles(rows, cols));\n        moveId = 0;\n        gameId = Symbol('gameId');\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  setContext('updateState', updateState);\n\n  $: isComplete = getIsComlete(tiles);\n  $: document.title = `${tiles[0].length * tiles.length - 1}-puzzle`;\n</script>\n\n<main id=\"root\">\n  {#if isComplete}\n    <Congrats {tiles} />\n  {:else}\n    <Controls {tiles} />\n    <Board {tiles} />\n    <Stats {moveId} {gameId} />\n  {/if}\n</main>\n\n<style>\n  /* PALLETE\n\t\tdark-primary-color:     #303F9F;\n\t\tdefault-primary-color:  #3F51B5;\n\t\tlight-primary-color:    #C5CAE9;\n\t\taccent-color:           #44b39b;\n\t\tdivider-color:          #B6B6B6\n\t*/\n\n  main {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    overflow: hidden;\n  }\n</style>",
    "<script>\n  import { getContext } from 'svelte';\n\n  export let tiles;\n  \n  let updateState = getContext('updateState');\n\n  const getSortedTiles = (tiles) => {\n    const sortedTiles = [];\n\n    tiles.forEach((rowTiles, y) => {\n      rowTiles.forEach((number, x) => {\n        sortedTiles[number] = [y, x];\n      });\n    });\n\n    return sortedTiles;\n  }\n\n  $: cols = tiles[0].length;\n  $: rows = tiles.length;\n  $: sortedTiles = getSortedTiles(tiles);\n</script>\n\n<div class='board-wrapper'>\n  <svg\n    class=\"board\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox={`0 0 ${cols * 24} ${rows * 24}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    {#each sortedTiles as pos, tileName}\n      {#if tileName !== 0}\n        <g\n          class=\"tile\"\n          on:click={() => { updateState('move', tileName); }}\n          key={tileName} \n          transform={`translate(${pos[1] * 24}, ${pos[0] * 24})`}\n        >\n          <rect\n            height=\"22\"\n            width=\"22\"\n            stroke-width=\"0\"\n            x=\"1\"\n            y=\"1\"\n          />\n          <text\n            font-size=\"12\"\n            transform={`translate(12, 16)`}\n            text-anchor=\"middle\"\n          >\n            {tileName}\n          </text>\n        </g>\n      {/if}\n    {/each}\n  </svg>\n</div>\n\n<style>\n  .board-wrapper {\n    height: calc(100% - 6rem);\n    padding: 2rem;\n  }\n\n  .board .tile {\n    cursor: pointer;\n  }\n\n  .board .tile rect {\n    fill: #3F51B5;\n  }\n\n  .board .tile text {\n    fill: #cfd5f7;\n  }\n\n  .board .tile, .board {\n    transition: all .15s cubic-bezier(1, 0, 0, 1)\n  }\n\n  @media all and (max-width: 768px) {\n    .board-wrapper {\n      padding: 1rem;\n    }\n  }\n\n  @media (pointer: fine) {\n    .board .tile:hover rect {\n      fill: #475bca;\n    }  \n  }\n\n  @media (pointer: coarse) {\n    .board .tile:active rect {\n      fill: #475bca;\n    } \n  }\n</style>",
    "<script>\n  import { getContext, onMount } from 'svelte';\n  \n  export let tiles;\n\n  let updateState = getContext('updateState');\n  let audio;\n  \n  onMount(() => {\n\t\taudio.play();\n  });\n  \n  $: cols = tiles[0].length;\n  $: rows = tiles.length;\n</script>\n\n<div class=\"congrats\">\n  <div class=\"congrats-star\" />\n  <div class=\"congrats-header\">\n    You did it!\n  </div>\n  <audio src=\"build/win.ogg\" bind:this={audio} />\n  <div class=\"congrats-controls\">\n    <a\n      href=\"#\"\n      alt=\"Play again!\"\n      on:click={() => updateState('updateSize', rows, cols)}\n    >\n      Play again!\n    </a>\n  </div>\n</div>\n\n<style>\n  .congrats {\n    overflow: hidden;\n    text-align: center;\n  }\n\n  .congrats-star {\n    background: url('star.svg') no-repeat center center;\n    background-size: contain;\n    height: 60vh;\n    width: 60vw;\n    margin: 0 auto;\n  }\n\n  .congrats-header {\n    font-size: 5vw;    \n    margin-top: 3vh;\n    text-align: center;\n  }\n\n  .congrats-controls {\n    margin-top: 3vh;\n  }\n\n  .congrats a {\n    color: white;\n    font-size: 2vw; \n  }\n</style>",
    "<script>\n  import { getContext } from 'svelte';\n  import ControlsButton from './ControlsButton.svelte';\n  import { find } from './helpers';\n  \n  export let tiles;\n  let updateState = getContext('updateState');\n\n  $: cols = tiles[0].length;\n  $: rows = tiles.length;\n\n  const handleKeyDown = ({ keyCode }) => {\n    const [row, col] = find(tiles, 0);\n    let tile;\n\n    if (keyCode === 37 && (col < cols - 1)) { // LEFT\n      tile = tiles[row][col + 1];\n    } else if (keyCode === 38 && (row < rows - 1)) { // UP\n      tile = tiles[row + 1][col];\n    } else if (keyCode === 39 && col > 0) { // RIGHT\n      tile = tiles[row][col - 1];\n    } else if (keyCode === 40 && row > 0) { // DOWN\n      tile = tiles[row - 1][col];\n    }\n\n    if (tile) updateState('move', tile);\n  };\n</script>\n\n<svelte:window on:keydown={handleKeyDown}/>\n\n<div class=\"controls\">\n  <div class=\"rows-controls\">\n    Rows\n    <ControlsButton {cols} {rows} update={[ 'rows', -1 ]} />\n    <ControlsButton {cols} {rows} update={[ 'rows', +1 ]} />\n  </div>\n  <div class=\"cols-controls\">\n    Columns\n    <ControlsButton {cols} {rows} update={[ 'cols', -1 ]} />\n    <ControlsButton {cols} {rows} update={[ 'cols', +1 ]} />\n  </div>\n  <div class=\"aside-controls\">\n    <ControlsButton {cols} {rows} shuffle />\n  </div>\n</div>\n\n<style>\n  .controls {\n    display: flex;\n    flex: 0 0 4rem;\n    font-size: 1.125rem;\n    padding-top: 1rem;\n  }\n\n  .controls > div {\n    padding: 0 1rem;\n    display: inline-flex;\n    align-items: center;\n  }\n\n  .controls .rows-controls {\n    flex: 1 0 auto;\n    justify-content: flex-end;\n    padding-left: 4rem;\n  }\n\n  .controls .cols-controls {\n    flex: 1 0 auto;\n  }\n\n  .controls .aside-controls {\n    flex: 0 1 auto;\n  }\n\n\n  @media all and (max-width: 768px) {\n    .controls {\n      font-size: 1rem;\n    }\n\n    .controls > div {\n      padding: 0 .25rem;\n    }\n\n    .controls > div:first-child {\n      padding-left: 1rem;\n    }\n\n    .controls > div:last-child {\n      padding-right: 1rem;\n    }\n  }\n</style>",
    "<script>\n  import { getContext } from \"svelte\";\n\n  export let direction = 0;\n  export let update = [];\n  export let rows;\n  export let cols;\n  export let shuffle = false;\n\n  let updateState = getContext(\"updateState\");\n\n  $: updateRows = update[0] === \"rows\";\n  $: updateCols = update[0] === \"cols\";\n  $: direction = update[1];\n</script>\n\n<svg\n  class=\"btn\"\n  viewBox=\"0 0 24 24\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  on:click={() => {\n    const nextRows = shuffle ? rows : Math.max(2, rows + (updateRows ? direction : 0));\n    const nextCols = shuffle ? cols : Math.max(2, cols + (updateCols ? direction : 0));\n    updateState('updateSize', nextRows, nextCols);\n  }}>\n  {#if shuffle}\n    <circle cx=\"12\" cy=\"12\" fill=\"#0dad8a\" r=\"11\" />\n    <g fill=\"#fff\">\n      <path\n        d=\"M6.59 9.49h2.43c.51 0 .97.27 1.29.68.22-.4.5-.8.82-1.15a2.95 2.95 0\n        00-2.11-.93H6.59a.7.7 0 100 1.4zm5.34 2.15c.38-1.15 1.56-2.15\n        2.53-2.15h1.28l-.9.89a.7.7 0 10.97.98L18.4 8.8l-2.57-2.57a.7.7 0\n        10-.98.98l.9.9h-1.28c-1.58 0-3.27 1.36-3.85 3.1l-.33.99c-.45 1.33-1.44\n        2.15-1.95 2.15H6.58a.7.7 0 100 1.4h1.75c1.28 0 2.69-1.34\n        3.28-3.12l.32-.98z\" />\n      <path\n        d=\"M15 12.47a.7.7 0 000 .98l.9.9h-1.63a2 2 0 01-1.88-1.47 6.36 6.36 0\n        01-.75 1.52 3.3 3.3 0 002.63 1.34h1.62l-.9.89a.7.7 0\n        10.98.98l2.58-2.57-2.57-2.57a.7.7 0 00-.99 0z\" />\n    </g>\n  {:else}\n    <circle\n      cx=\"12\"\n      cy=\"12\"\n      fill=\"#fff\"\n      fill-opacity=\"0.1\"\n      r=\"11\"\n      stroke-width=\"0.5\"\n      stroke=\"#fff\" />\n    <text\n      text-anchor=\"middle\"\n      font-size=\"9\"\n      font-weight=\"bold\"\n      transform={`translate(12, 15.5)`}\n      fill=\"#fff\">\n      {direction > 0 ? '+' : '-'}\n    </text>\n  {/if}\n</svg>\n\n<style>\n  .btn {\n    cursor: pointer;\n    margin-left: 1rem;\n    height: 3rem;\n    width: 3rem;\n    transition: all 0.2s;\n    opacity: 0.6;\n  }\n\n  @media all and (max-width: 768px) {\n    .btn {\n      height: 2rem;\n      width: 2rem;\n      margin-left: 0.3rem;\n    }\n  }\n\n  @media (pointer: fine) {\n    .btn:hover {\n      opacity: 1;\n    }\n  }\n\n  @media (pointer: coarse) {\n    .btn:active {\n      opacity: 1;\n    }\n  }\n</style>\n",
    "<script>\n  import { getContext, onMount } from 'svelte';\n  import { getTime } from './helpers';\n  \n  export let moveId;\n  export let gameId;\n  \n  let seconds;\n  let previousGameId;\n  let interval;\n\n  const resetInterval = () => {\n    clearInterval(interval);\n\n\t  interval = setInterval(() => {\n\t\t\tseconds +=1\n\t\t}, 1000);\n\n\t\treturn () => clearInterval(interval);\n  }\n\n  onMount(resetInterval);\n  \n  $: {\n     if (previousGameId !== gameId) {\n       seconds = 0;\n       previousGameId = gameId;\n       resetInterval();\n     }\n  }\n  $: time = getTime(seconds);\n</script>\n\n<div class=\"stats\">\n  <span>Move: {moveId}</span> \n  <span>Time: {time}</span>\n</div>\n\n<style>\n  .stats {\n    flex: 0 0 4rem;\n    font-size: 1.125rem;\n    text-align: center;\n  }\n\n  span {\n    padding: 0 1rem;\n  }\n\n  @media all and (max-width: 768px) {\n    .stats {\n      font-size: 1rem;\n    }\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}